{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build C++ project",
            "type": "shell",
            "command": "g++",
            "args": [
                "-g",
                "${workspaceFolder}/source/*.cpp",
                "-o",
                "${workspaceFolder}/program",
                "-std=c++11"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": ["absolute"],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            },
            "detail": "Generated task by Debugger."
        },
        {
            "label": "Delete :Zone.Identifier files",
            "type": "shell",
            "command": "rm",
            "args": [
                "${workspaceFolder}/**/*:Zone.Identifier"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Delete all :Zone.Identifier files from the project"
        },
        {
            "label": "Output contents of all files from source",
            "type": "shell",
            "command": "cat",
            "args": [
                "${workspaceFolder}/source/*",
                ">",
                "${workspaceFolder}/tmp"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Outputs the contents of all files in the source folder to the tmp file."
        },
        {
            "label": "zip-folder",
            "type": "shell",
            "command": "cd ${workspaceFolder}/source && rm -f ${workspaceFolder}/report/source.zip  && zip -r ${workspaceFolder}/report/source.zip .",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        }     
    ]
}
