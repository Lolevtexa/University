import tkinter as tk
from tkinter import colorchooser

class UIControls:
    def __init__(self, root, on_group_change, on_group_delete, on_color_change, on_toggle_closed):
        """
        –°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏ (–∫—Ä–æ–º–µ —ç–ª–µ–∫—Ç—Ä–æ–¥–æ–≤).
        """
        self.root = root
        self.on_group_change = on_group_change
        self.on_group_delete = on_group_delete
        self.on_color_change = on_color_change
        self.on_toggle_closed = on_toggle_closed

        # –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø
        self.available_colors = ["blue", "red", "green", "purple", "orange", "cyan", "magenta", "brown", "pink", "yellow"]

        # –§—Ä–µ–π–º –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        self.groups_frame = tk.Frame(root)
        self.groups_frame.grid(row=0, column=1, padx=10)

        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        header_frame = tk.Frame(self.groups_frame)
        header_frame.pack(fill="x", pady=2)

        tk.Label(header_frame, text="–ì—Ä—É–ø–ø–∞", width=8, anchor="w").pack(side="left", padx=5)
        tk.Label(header_frame, text="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª", width=10, anchor="w").pack(side="left", padx=5)
        tk.Label(header_frame, text="–ó–∞–º–∫–Ω.", width=6, anchor="w").pack(side="left", padx=5)
        tk.Label(header_frame, text="–¶–≤–µ—Ç", width=6, anchor="w").pack(side="left", padx=5)
        tk.Label(header_frame, text="–£–¥–∞–ª–∏—Ç—å", width=6, anchor="w").pack(side="left", padx=5)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã
        self.active_group_label = tk.Label(root, text="–ê–∫—Ç–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞: G1", fg="black", font=("Arial", 10, "bold"))
        self.active_group_label.grid(row=0, column=2, padx=10)

        # –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
        self.group_frames = {}
        self.potential_entries = {}
        self.closed_checkboxes = {}
        self.color_labels = {}
        self.delete_buttons = {}
        self.group_buttons = {}

    def add_group(self, group_id, color=None, potential=0, closed=False):
        """ –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –≤ UI, group_id ‚Äì —Å—Ç—Ä–æ–∫–∞ (–Ω–∞–ø—Ä. 'G1'). """
        if color is None:
            color = self.available_colors[len(self.group_frames) % len(self.available_colors)]

        frame = tk.Frame(self.groups_frame)
        frame.pack(pady=2, fill="x")
        self.group_frames[group_id] = frame

        # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
        btn = tk.Button(frame, text=f"{group_id}", command=lambda g=group_id: self.on_group_change(g), width=8)
        btn.pack(side="left", padx=5)
        self.group_buttons[group_id] = btn

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞
        entry = tk.Entry(frame, width=7, justify="center")
        entry.insert(0, str(potential))
        entry.pack(side="left", padx=5)
        self.potential_entries[group_id] = entry

        # –§–ª–∞–∂–æ–∫ –∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç–∏
        closed_var = tk.BooleanVar(value=closed)
        checkbox = tk.Checkbutton(frame, variable=closed_var, command=lambda g=group_id: self.on_toggle_closed(g))
        checkbox.pack(side="left", padx=5)
        self.closed_checkboxes[group_id] = closed_var

        # –ú–µ—Ç–∫–∞ —Ü–≤–µ—Ç–∞
        color_label = tk.Label(frame, bg=color, width=3, height=1)
        color_label.pack(side="left", padx=5)
        self.color_labels[group_id] = color_label

        # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
        tk.Button(frame, text="üñå", command=lambda g=group_id: self.on_color_change(g), width=3).pack(side="left", padx=5)

        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã
        del_btn = tk.Button(frame, text="‚ùå", command=lambda g=group_id: self.on_group_delete(g), width=3)
        del_btn.pack(side="left", padx=5)
        self.delete_buttons[group_id] = del_btn

    def remove_group(self, group_id):
        """ –£–¥–∞–ª—è–µ—Ç –≥—Ä—É–ø–ø—É –∏–∑ UI """
        if group_id in self.group_frames:
            self.group_frames[group_id].destroy()
            del self.group_frames[group_id]
            del self.potential_entries[group_id]
            del self.closed_checkboxes[group_id]
            del self.color_labels[group_id]
            del self.delete_buttons[group_id]
            del self.group_buttons[group_id]

    def get_potential(self, group_id):
        """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –≥—Ä—É–ø–ø—ã """
        return float(self.potential_entries[group_id].get())

    def is_closed(self, group_id):
        """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç–∏ –≥—Ä—É–ø–ø—ã """
        return self.closed_checkboxes[group_id].get()

    def update_active_group(self, group_id):
        """ –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã """
        self.active_group_label.config(text=f"–ê–∫—Ç–∏–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞: {group_id}")
